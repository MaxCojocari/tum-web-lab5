{
  "https://gist.github.com/strdr4605/b5c97f5268c56e01c1ee9ed9cba76abb": " WEB-LAB5.md · GitHub\n Skip to content\n All gists Back to GitHub Sign in Sign up\n Sign in Sign up\n You signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert\n {{ message }}\n Instantly share code, notes, and snippets.\n strdr4605/WEB-LAB5.md Secret\n Last activeMarch 24, 2024 13:20\n Star 2 You must be signed in to star a gist\n Fork 0 You must be signed in to fork a gist\n Star You must be signed in to star a gist\n Code Revisions2 Stars2\n Embed\n Embed Embed this gist in your website.\n Share Copy sharable link for this gist.\n Clone via HTTPS Clone using the web URL.\n Learn more about clone URLs\n Clone this repository at &lt;script src=&quot;https://gist.github.com/strdr4605/b5c97f5268c56e01c1ee9ed9cba76abb.js&quot;&gt;&lt;/script&gt;\n Save strdr4605/b5c97f5268c56e01c1ee9ed9cba76abb to your computer and use it in GitHub Desktop.\n Download ZIP\n Raw\n WEB-LAB5.md\n Lab 5 - Websockets\n You have to write a command line program:\n The program should implement at least the following CLI:\n go2web -u  # make an HTTP request to the specified URL and print the response\ngo2web -s  # make an HTTP request to search the term using your favorite search engine and print top 10 results\ngo2web -h # show this help\n\n The responses from request should be human-readable (e.g. no HTML tags in the output)\n Special conditions\n Any programming language can be used, but not the built-in/third-party libraries for making HTTP requests. GUI applications aren't allowed. The app has to be launched with go2web executable.\n Grading\n Submission:\n WIP PRs/commits done in class/same day of lab;\n Other PRs/commits for each tasks/extra points;\n In repo README include a gif with working example.\n Points:\n executable with -h, (-u or -s) options - +5 points\n executable with -h, (-u and -s) options - +6 points\n You can get +1 extra point:\n if results/links from search engine can be accessed (using your CLI);\n for implementing HTTP request redirects.\n You can get +2 extra points:\n for implementing an HTTP cache mechanism;\n for implementing content negotiation e.g. by accepting and handling both JSON and HTML content types.\n Hints\n Before opting for some language, make sure you have the right tools: CLI parser, HTML/JSON parser, support for TCP sockets;\n For CLI you can use built-in libraries or even Bash built-in getopts;\n Use third-party libraries for parsing HTML and presenting it;\n For HTTP cache you'll need either an in-memory store or file access;\n  can either be a single word or all words following -s argument.\n Sign up for free to join this conversation on GitHub. Already have an account?Sign in to comment\n Footer\n © 2024 GitHub, Inc.\n Footer navigation\n Terms\n Privacy\n Security\n Status\n Docs\n Contact\n Manage cookies\n Do not share my personal information\n You can’t perform that action at this time.",
  "https://www.hasdeu.md/ro": "Acasă | Biblioteca Municipală B.P. HASDEU Mergi la conţinutul principal\nFacebook\nInstagram\nTwitter\nTelegram\nPinterest\nYoutube\nFlickr\nSlideshare\nLinkedIn\n en\n ro\n ru\n Biblioteca Municipală B.P. HASDEU\n Mobile menu expand iconMeniuÎnchidere\n Colecție\n Intrări noi\n Colecții speciale\n Ebooks\n Biblioteca digitală\n Repozitoriul HAPEs \n Baze de date\n Servicii\n Servicii pentru copii\n Servicii pentru adolescenți\n Servicii pentru adulți 50+\n Servicii după subiecte \n Bătălia cărților\n Campanii\n Concursuri\n Connect Plus\n Provocarea verii\n Ziua Chișinăului\n Chișinăul citește\n Evenimente\n Online\n Biblioteca live\n Bloguri\n Podcasturi\n Initiative\n Biblioteci\n Biblioteci\n Profesional\n Colocvii profesionale de vară\n Formare continuă\n Club de lectură „Forzaț”\n Conferințe anuale\n Ediții profesionale\n Sucursala municipală a ABRM\nÎnregistrare\nBătălia cărților \nEdiția a X-a\n\\\n\nColecții\n\\\n\nBiblioteca digitală\n\\\n\nCărți noi\n\\\n\neBooks\n\\\n\nPodcasturi\n\\\n\nPinacoteca\n Website * (Opţional)\n Catalog * (Opţional)\n Căutare\n\\\n\nDespre bibliotecă\nDespre noi\nÎnregistrare la bibliotecă\nÎmprumutul documentelor\nEvenimente\nBiblioteci\nAchită serviciile BM prin MPay\nActuala Bibliotecă Municipală a fost inaugurată la 19 octombrie 1877, iniţial ca bibliotecă orăşenească, apoi ca bibliotecă centrală orăşenească. Biblioteca Municipală oferă acces liber şi echitabil la informaţie, educaţie, idei, opinii, lecturi; încurajează, susține interesul şi libertatea de a cunoaşte; asigură şi dezvoltă servicii moderne şi necesare dezvoltării chişinăuienilor.\nMai multe\n Evenimente\n 27 Martie, 2024 14:30 - 15:30\nGânduri despre teatru\n\\\n\n 27 Martie, 2024 12:00 - 13:00\nDescoperind magia scenei\n\\\n\n 26 Martie, 2024 15:00 - 16:00\nPrin poezie făptuim Unirea\n\\\n\n 26 - Martie, 2024 09:00 - 28 Martie, 2024 17:00\n10 ani de formare a bibliotecarilor\n\\\n\nToate evenimentele\n Cărți\nDin cer au căzut trei mere\n Narine Abgarian\n Traducere din rusă: Luana Schidu\nCitește\nLibrăria de investigații magice\n Garth Nix\n trad. Iulia Dromereschi\nCitește\nCastelul de sticlă\n Jeannette Walls\n traducator: Lorena Lupu\nCitește\nMagee, zis Maniacul\n Jerry Spinelli \n traducător, note: Tatiana Dragomir \nCitește\nColiba unchiului Tom\n Harriet Beecher Stowe\n traducător: Maria Manoliu \nCitește\nCând mă vei întâlni \n Rebecca Stead\n traducere si note de Iulia Arsintescu\nCitește\nToate cărțile\n Bloguri\n\\\n\nAurel Vlaicu, 110 ani de eternitate\n 21 Septembrie, 2023\n\\\n\nCălare pe coama leului, descoperind tainele Chișinăului alături de poeta Victoria Fonari ...\n 22 Iunie, 2023\n\\\n\n7 sfaturi pentru a deveni un mare cetățean digital\n 21 Martie, 2024\n\\\n\nCărțile aduc magia sărbătorilor de iarnă\n 23 Decembrie, 2023\n\\\n\n21 IUNIE 1988 în istoria Bibliotecii Municipale \n 26 Iunie, 2023\n\\\n\nIoan SLAVICI: cronica unei vieți dedicate literaturii și dreptății sociale\n 25 Ianuarie, 2024\nToate blogurile\n Memoria Chișinăului\n\\\n\nNadejdin. Saga din Chisinau (IV)\n 15 Martie, 2024\n\\\n\nNadejdin. Saga din Chisinau (III)\n 14 Martie, 2024\n\\\n\nValeriu Cupcea, primul comentator sportiv originar din Basarabia\n 14 Martie, 2024\n\\\n\nNadejdin. Saga din Chisinau (II)\n 11 Martie, 2024\n\\\n\nMihai Volontir : Inedit\n 11 Martie, 2024\n\\\n\nНадеждин. Кишинёвская сага\n 7 Martie, 2024\nProfesional\n\\\n\nBloguri BM\n\\\n\nBiblioCity\n\\\n\nRevista BiblioPolis\n\\\n\nHAPEs \n\\\n\nCampusul competențelor\n\\\n\nOferta educațională\n\\\n\nEvenimente profesionale\n\\\n\nColocvii profesionale de vară\n\\\n\nConferințe anuale\n\\\n\nClubul de lectură Forzaț\n Contacte\n Despre bibliotecă\n Istoric\n Raport anual\n Plan anual\n Posturi vacante\n Prietenii Bibliotecii\n Utilizarea bibliotecii\n Codul serviciilor\n Înregistrarea utilizatorului\n Împrumutul documentelor\n Achitări prin MPay\n Structura și reteaua BM\n Consiliul de administrație\n Directori\n Biblioteci\n Secții și centre\n Întreabă bibliotecarul\nFacebook\nInstagram\nTwitter\nTelegram\nPinterest\nYoutube\nFlickr\nSlideshare\nLinkedIn\n © Biblioteca Municipala „B.P. Hasdeu” 2024",
  "https://www.linkedin.com/pulse/caching-strategies-nodejs-fidisys/": " Caching Strategies in Node.js\n Agree & Join LinkedIn\n By clicking Continue, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.\n Sign in to view more content\n Create your free account or sign in to continue your search\n Sign in\n Welcome back\n Email or phone\n Password\n Show\n Forgot password? Sign in\n or\n By clicking Continue, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.\n New to LinkedIn? Join now\n or\n By clicking Continue, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.\n New to LinkedIn? Join now\n Skip to main content\n LinkedIn\n Articles\n People\n Learning\n Jobs\n Join now Sign in\n Caching Strategies in Node.js\n Report this article\n Fidisys\n Fidisys\n You Dream IT - We Build IT\n Published Sep 1, 2023\n + Follow\n Caching Strategies in Node.js \n Introduction: \n Caching is a vital technique in Node.js web development, aimed at improving application performance by storing and reusing data. This guide explores ten caching strategies for Node.js, ranging from inmemory and distributed caching to HTTP caching and database query caching. These strategies can enhance application speed and efficiency, optimizing user experiences. \n 1. In-Memory Caching: \n -This strategy involves storing data in memory (RAM) for quick retrieval. It's fast but not suitable for large datasets or data that needs to persist across server restarts. \n - Libraries like node-cache or built-in JavaScript objects (e.g., Map or Object) can be used. \n 2. Local Filesystem Caching: \n - Data can be cached as files on the local filesystem, making it persistent across server restarts. \n - This is suitable for caching large datasets or when you need data to survive server restarts. \n 3. Distributed Caching: \n - In distributed caching, data is stored in a separate caching server or service, such as Redis or Memcached. \n - This is highly scalable and allows multiple Node.js instances or even multiple servers to share cached data. \n 4. HTTP Caching: \n - HTTP caching leverages HTTP headers like Cache-Control and ETag to cache responses in the client's browser or in intermediary caches (e.g., CDNs). \n - You can control caching behavior using headers in your Node.js application's HTTP responses. \n 5. Reverse Proxy Caching: \n Nginx is a popular reverse proxy server that can cache responses from your Node.js application. Here's an Nginx configuration snippet \n In this configuration, Nginx caches responses from the Node.js server for 1 hour and sets cache headers for static assets. \n 6. Content Delivery Network (CDN) Caching: \n CDN caching is typically configured through the CDN provider's dashboard, so there's no direct code example for this strategy. You would set up your CDN (e.g., Cloudflare, AWS CloudFront) to cache static assets like images, CSS, and JavaScript files. Once configured, the CDN automatically handles caching and serving these assets. \n 7. Database Query Caching: \n - Caching the results of database queries to avoid hitting the database repeatedly. \n - Libraries like Sequelize (for SQL databases) or Mongoose (for MongoDB) often support query result caching. \n 8. Application-Level Caching: \n - Implement custom caching logic within your Node.js application, such as caching the results of expensive calculations or API responses. \n - This approach gives you fine-grained control over what and how data is cached. \n 9. Database-Level Caching (using Redis for caching): \n - Redis can be used for caching frequently accessed data. Here's an example using Redis as a caching layer for a MongoDB database \n 10. Session Caching (using express-session with Redis store): \n - Caching user sessions to reduce the overhead of recreating session data on each request. \n - Libraries like express-session can be configured to use different caching stores, including inmemory and database-backed stores. \n In this example, express-session is used with a Redis store to cache user sessions. You'll need to install the required packages via npm install express-session connect-redis and have a running Redis server. Adjust the configuration to fit your needs.\n Conclusion: \n Node.js developers have an array of caching strategies at their disposal. By selecting the right strategy based on specific needs, they can significantly enhance application performance, ensuring quicker response times and improved user satisfaction. Caching is a powerful tool in the quest for efficient web applications.\n Thanks for sharing Dinesh N\n #FridayatFidisys #learning #cachingstrategies #cachemanagement #rediscache #apiperformance #databasecaching #backend #expressjs \n Like\n Like\n Celebrate\n Support\n Love\n Insightful\n Funny\n Comment\n Copy\n LinkedIn\n Facebook\n Twitter\n Share\n 18\n To view or add a comment, sign in\n More articles by this author\n No more previous content\n React in Futuristic User Interfaces\n Oct 13, 2023\n Memoization in React \n Oct 13, 2023\n Mastering Asynchronous Control Flow in Node.js\n Oct 13, 2023\n A Guide to Effective State Management with Context API\n Sep 29, 2023\n React Composition\n Sep 29, 2023\n Microservices vs. Monolithic Architecture\n Sep 29, 2023\n Unit Testing in React \n Sep 22, 2023\n React Animations for Stunning UI\n Sep 22, 2023\n Design and Implementing a Microservice Architecture\n Sep 22, 2023\n React Suspense: Data Fetching Strategies\n Sep 15, 2023\n No more next content\n Insights from the community\n Programming\n How do you optimize performance for API frameworks and libraries?\n Database Development\n What are the most effective ORM caching strategies?\n Computer Science\n How can you design APIs that handle large amounts of traffic?\n Back-End Web Development\n How do you handle cache invalidation and consistency with Apache Ignite?\n Web Applications\n How do you design RESTful APIs for optimal performance?\n Object-Relational Mapping (ORM)\n What are some best practices for using ORM caching and lazy loading?\n Programming\n How can you optimize GraphQL performance?\n Computer Science\n How does Ruby on Rails handle web application caching?\n Internet Services\n What are the most important strategies for integrating DBMS with serverless computing?\n Web Development\n How can you handle database transactions in Spring Boot microservices?\n Show more Show less\n Others also viewed\n “Caching for Performance: Speed Up Your Web Application with Django’s Built-In Caching Framework”\n Abdel-Rahman Saied 3mo\n 8 ways to improve performance of your node js application\n Kal T 1y\n Node.js Performance Optimization Techniques Every Developer Should Know\n Richa Miglani 3mo\n Hibernate caching - explained with example\n Sameh Muhammed 2y\n Optimizing performance of .NET Core applications using caching and other techniques\n Vahid Khorgami 10mo\n Boosting Performance in C# .NET Applications with LazyCache\n Ajay Kumar 2mo\n Implementing caching strategies for faster backend performance \n Roshan Shaha 7mo\n Evaluation of Caching Frameworks\n Rob Tan 9y\n How to Optimize Your Laravel API for Better Performance\n Durim Gjoshi 8mo\n Scaling Up Series: Caching Techniques with Redis\n Allan Cruz 1mo\n Show more Show less\n Explore topics\n Sales\n Marketing\n Business Administration\n HR Management\n Content Management\n Engineering\n Soft Skills\n See All\n LinkedIn © 2024\n About\n Accessibility\n User Agreement\n Privacy Policy\n Cookie Policy\n Copyright Policy\n Brand Policy\n Guest Controls\n Community Guidelines\n العربي�� (Arabic)\n Čeština (Czech)\n Dansk (Danish)\n Deutsch (German)\n English (English)\n Español (Spanish)\n Français (French)\n हिंदी (Hindi)\n Bahasa Indonesia (Indonesian)\n Italiano (Italian)\n 日本語 (Japanese)\n 한국어 (Korean)\n Bahasa Malaysia (Malay)\n Nederlands (Dutch)\n Norsk (Norwegian)\n Polski (Polish)\n Português (Portuguese)\n Română (Romanian)\n Русский (Russian)\n Svenska (Swedish)\n ภาษาไทย (Thai)\n Tagalog (Tagalog)\n Türkçe (Turkish)\n Українська (Ukrainian)\n 简体中文 (Chinese (Simplified))\n 正體中文 (Chinese (Traditional))\n Language"
}